/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package full_detected;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Gustavo
 */
public class Vista extends javax.swing.JFrame {

    /**
     * Creates new form Vista
     */
    public Vista() {
        initComponents();
      
    }
    String[] Characters = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "ñ", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
        "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "Ñ", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
        " ", ".", ",", ";", ":"};
    ArrayList<String> ValidCharacters = new ArrayList<>(Arrays.asList(Characters));
    String NameFile = "";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Fc = new javax.swing.JFileChooser();
        bg = new javax.swing.JPanel();
        Recep_Btn = new javax.swing.JButton();
        Envio_Btn = new javax.swing.JButton();
        sidepanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        min = new javax.swing.JButton();
        close = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Recep_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/inbox_96px.png"))); // NOI18N
        Recep_Btn.setBorder(null);
        Recep_Btn.setBorderPainted(false);
        Recep_Btn.setContentAreaFilled(false);
        Recep_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Recep_BtnActionPerformed(evt);
            }
        });

        Envio_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/send_file_96px.png"))); // NOI18N
        Envio_Btn.setBorder(null);
        Envio_Btn.setBorderPainted(false);
        Envio_Btn.setContentAreaFilled(false);
        Envio_Btn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Envio_Btn.setDefaultCapable(false);
        Envio_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Envio_BtnActionPerformed(evt);
            }
        });

        sidepanel.setBackground(new java.awt.Color(51, 103, 214));

        javax.swing.GroupLayout sidepanelLayout = new javax.swing.GroupLayout(sidepanel);
        sidepanel.setLayout(sidepanelLayout);
        sidepanelLayout.setHorizontalGroup(
            sidepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 217, Short.MAX_VALUE)
        );
        sidepanelLayout.setVerticalGroup(
            sidepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(76, 146, 237));

        min.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/minus_math_32px.png"))); // NOI18N
        min.setBorder(null);
        min.setBorderPainted(false);
        min.setContentAreaFilled(false);
        min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minActionPerformed(evt);
            }
        });

        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/delete_sign_32px.png"))); // NOI18N
        close.setBorder(null);
        close.setBorderPainted(false);
        close.setContentAreaFilled(false);
        close.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(631, Short.MAX_VALUE)
                .addComponent(min, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(min, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 108, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(82, 82, 82));
        jLabel1.setText("Send");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(82, 82, 82));
        jLabel2.setText("Recieve");

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addComponent(sidepanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bgLayout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(Envio_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Recep_Btn)))
                        .addGap(148, 148, 148))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(161, 161, 161))))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Envio_Btn)
                    .addComponent(Recep_Btn))
                .addGap(61, 61, 61))
            .addComponent(sidepanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Envio_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Envio_BtnActionPerformed
        // TODO add your handling code here:

        
        
        int Opcion = Fc.showOpenDialog(this); //Mostrar el FileChooser
        if (Opcion == JFileChooser.APPROVE_OPTION) {
            File archivo = Fc.getSelectedFile();
            NameFile = archivo.getName();
            NameFile = NameFile.substring(0, NameFile.length() - 4);
            try (Scanner Lector = new Scanner(archivo)) {
                String Linea = Lector.nextLine();
                if (Lector.hasNext()) {
                    System.out.println("El archivo de entrada debe tener no más de una línea");
                    System.exit(0);
                }
                Send(Linea);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_Envio_BtnActionPerformed

    private void Recep_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Recep_BtnActionPerformed
        // TODO add your handling code here:
        int Opcion = Fc.showOpenDialog(this); //Mostrar el FileChooser
        ArrayList<String> Words = new ArrayList<String>();
        if (Opcion == JFileChooser.APPROVE_OPTION) {
            File archivo = Fc.getSelectedFile();
            NameFile = archivo.getName();
            NameFile = NameFile.substring(0, NameFile.length() - 4);
            try (Scanner Lector = new Scanner(archivo)) {
                while (Lector.hasNext()) {
                    String Linea = Lector.nextLine();
                    Words.add(Linea);
                }
                Reception(Words);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_Recep_BtnActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        this.setVisible(false);
       
    }//GEN-LAST:event_closeActionPerformed

    private void minActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minActionPerformed
       this.setState(Vista.ICONIFIED);
    }//GEN-LAST:event_minActionPerformed

    public void Send(String Word) {
        String[] Words;
        //Dividir las palabras en bloques
        if (Word.length() % 16 == 0) {
            Words = new String[Word.length() / 16];
        } else {
            Words = new String[Word.length() / 16 + 1];
        }
        int start = 0;
        int end = 16;
        int cont = 0;
        while (end <= Word.length()) { //Se divide 16 carecteres en un bloque
            Words[cont] = Word.substring(start, end);
            cont++;
            start = start + 16;
            end = end + 16;
        }
        if (end > Word.length() && start != Word.length()) { //Coloca los caracteres que quedan(los menores a 16) en un bloque
            end = Word.length();
            Words[cont] = Word.substring(start, end);
        }
        //Convertir el ASCII a Binario
        String[] Bin = new String[Words.length];
        for (int i = 0; i < Bin.length; i++) {
            String binario = "";
            for (int j = 0; j < Words[i].length(); j++) {
                if (ValidCharacters.contains(Words[i].charAt(j) + "")) {
                    if ((int) Words[i].charAt(j) <= 63) {
                        binario = binario + "00" + Integer.toBinaryString((int) Words[i].charAt(j));
                    } else {
                        binario = binario + "0" + Integer.toBinaryString((int) Words[i].charAt(j));
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "No debe contener caracteres inválidos.", "Error", 1);
                    System.exit(0);
                }
            }
            int Parity = 0;
            for (int j = 0; j < binario.length(); j++) {
                if (binario.charAt(j) == '1') {
                    Parity++;
                }
            }
            if (Parity % 2 == 0) { // Agregamos el bit de paridad
                binario = binario + "0";
            } else {
                binario = binario + "1";
            }
            Bin[i] = binario;
        }
        try ( //Crear archivo .btp
                PrintWriter Writer = new PrintWriter(NameFile + ".btp", "UTF-8")) {
            for (String Bina : Bin) {
                Writer.println(Bina);
            }
            Writer.close();
        } catch (FileNotFoundException | UnsupportedEncodingException ex) {
            Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void Reception(ArrayList<String> Words) {
        //Verificar Paridad 
        String Palabra = "";
        for (int i = 0; i < Words.size(); i++) {
            int Parity = 0;
            for (int j = 0; j < Words.get(i).length(); j++) {
                if (Words.get(i).charAt(j) == '1') {
                    Parity++;
                }
            }
            if (Parity % 2 == 0) {
                String Line = Words.get(i).substring(0, Words.get(i).length() - 1);
                Words.set(i, Line);
            } else {
                JOptionPane.showMessageDialog(null, "Mensaje incorrecto", "Error", 1);
                System.exit(0);
            }
            String[] Bin = new String[Words.get(i).length() / 8]; //Separar en 8 bits 
            int End = 8;
            int Cont = 0;
            for (int j = 0; j < Words.get(i).length(); j = j + 8) {
                Bin[Cont] = Words.get(i).substring(j, End);
                End = End + 8;
                Cont++;
            }
            //Convertir de Binario a String
            String Cad = "";
            for (int j = 0; j < Bin.length; j++) {
                Cad = Cad + convertBinaryStringToString(Bin[j]);
            }
            Palabra = Palabra + Cad;
        }
        try ( //Crear archivo .txt
                PrintWriter Writer = new PrintWriter(NameFile + ".txt", "UTF-8")) {
            Writer.println(Palabra);
            Writer.close();
        } catch (FileNotFoundException | UnsupportedEncodingException ex) {
            Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null, "Mensaje correcto", "Mensaje", 1);
    }

    public static String convertBinaryStringToString(String string) {
        StringBuilder sb = new StringBuilder();
        char[] chars = string.toCharArray();
        int[] mapping = {1, 2, 4, 8, 16, 32, 64, 128};
        int idx = 0;
        int sum = 0;
        for (int i = 7; i >= 0; i--) {
            if (chars[i] == '1') {
                sum += mapping[idx];
            }
            idx++;
        }
        sb.append(Character.toChars(sum));
        return sb.toString();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Envio_Btn;
    private javax.swing.JFileChooser Fc;
    private javax.swing.JButton Recep_Btn;
    private javax.swing.JPanel bg;
    private javax.swing.JButton close;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JButton min;
    private javax.swing.JPanel sidepanel;
    // End of variables declaration//GEN-END:variables
}
